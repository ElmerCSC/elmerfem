
UMFPACK V4.4 (Jan. 28, 2005) demo: _di_ version

UMFPACK:  Copyright (c) 2005 by Timothy A. Davis.  All Rights Reserved.


UMFPACK License:

   Your use or distribution of UMFPACK or any modified version of
   UMFPACK implies that you agree to this License.

   THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY
   EXPRESSED OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.

   Permission is hereby granted to use or copy this program, provided
   that the Copyright, this License, and the Availability of the original
   version is retained on all copies.  User documentation of any code that
   uses UMFPACK or any modified version of UMFPACK code must cite the
   Copyright, this License, the Availability note, and "Used by permission."
   Permission to modify the code and to distribute modified code is granted,
   provided the Copyright, this License, and the Availability note are
   retained, and a notice that the code was modified is included.  This
   software was developed with support from the National Science Foundation,
   and is provided to you free of charge.

Availability: http://www.cise.ufl.edu/research/sparse/umfpack

UMFPACK V4.4 (Jan. 28, 2005): OK


UMFPACK V4.4 (Jan. 28, 2005), Control:

    Matrix entry defined as: double
    Int (generic integer) defined as: int

    0: print level: 5
    1: dense row parameter:    0.2
        "dense" rows have    > max (16, (0.2)*16*sqrt(n_col) entries)
    2: dense column parameter: 0.2
        "dense" columns have > max (16, (0.2)*16*sqrt(n_row) entries)
    3: pivot tolerance: 0.1
    4: block size for dense matrix kernels: 32
    5: strategy: 0 (auto)
    6: initial allocation ratio: 0.7
    7: max iterative refinement steps: 2
    12: 2-by-2 pivot tolerance: 0.01
    13: Q fixed during numerical factorization: 0 (auto)
    14: AMD dense row/col parameter:    10
       "dense" rows/columns have > max (16, (10)*sqrt(n)) entries
        Only used if the AMD ordering is used.
    15: diagonal pivot tolerance: 0.001
        Only used if diagonal pivoting is attempted.
    16: scaling: 1 (divide each row by sum of abs. values in each row)
    17: frontal matrix allocation ratio: 0.5
    18: drop tolerance: 0
    19: AMD and COLAMD aggressive absorption: 1 (yes)

    The following options can only be changed at compile-time:
    8: BLAS library used:  none.  UMFPACK will be slow.
    9: compiled for ANSI C (uses malloc, free, realloc, and printf)
    10: CPU timer is POSIX times ( ) routine.
    11: compiled for normal operation (debugging disabled)
    computer/operating system: Linux
    size of int: 4 long: 4 Int: 4 pointer: 4 double: 8 Entry: 8 (in bytes)


b: dense vector, n = 5. 
    0 : (8)
    1 : (45)
    2 : (-3)
    3 : (3)
    4 : (19)
    dense vector OK


A: triplet-form matrix, n_row = 5, n_col = 5 nz = 12. 
    0 : 0 0  (2)
    1 : 4 4  (1)
    2 : 1 0  (3)
    3 : 1 2  (4)
    4 : 2 1  (-1)
    5 : 2 2  (-3)
    6 : 0 1  (3)
    7 : 1 4  (6)
    8 : 2 3  (2)
    9 : 3 2  (1)
    10 : 4 1  (4)
    11 : 4 2  (2)
    triplet-form matrix OK


A: column-form matrix, n_row 5 n_col 5, nz = 12. 

    column 0: start: 0 end: 1 entries: 2
	row 0 : (2)
	row 1 : (3)

    column 1: start: 2 end: 4 entries: 3
	row 0 : (3)
	row 2 : (-1)
	row 4 : (4)

    column 2: start: 5 end: 8 entries: 4
	row 1 : (4)
	row 2 : (-3)
	row 3 : (1)
	row 4 : (2)

    column 3: start: 9 end: 9 entries: 1
	row 2 : (2)

    column 4: start: 10 end: 11 entries: 2
	row 1 : (6)
	row 4 : (1)
    column-form matrix OK


Symbolic factorization of A: Symbolic object: 
    matrix to be factorized:
	n_row: 5 n_col: 5
	number of entries: 12
    block size used for dense matrix kernels:   32
    strategy used:                              unsymmetric
    ordering used:                              colamd on A

    performn column etree postorder:            yes
    prefer diagonal pivoting (attempt P=Q):     no
    variable-size part of Numeric object:
	minimum initial size (Units): 74  (MBytes): 0.0
	estimated peak size (Units):  1301  (MBytes): 0.0
	estimated final size (Units): 15  (MBytes): 0.0
    symbolic factorization memory usage (Units): 144  (MBytes): 0.0
    frontal matrices / supercolumns:
	number of frontal chains: 1
	number of frontal matrices: 1
	largest frontal matrix row dimension: 3
	largest frontal matrix column dimension: 3

    Frontal chain: 0.  Frontal matrices 0 to 0
	Largest frontal matrix in Frontal chain: 3-by-3
	Front: 0  pivot cols: 3 (pivot columns 0 to 2)
	    pivot row candidates: 2 to 4
	    leftmost descendant: 0
	    1st new candidate row : 2
	    parent: (none)

Initial column permutation, Q1: permutation vector, n = 5. 
    0 : 3 
    1 : 2 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


Initial row permutation, P1: permutation vector, n = 5. 
    0 : 2 
    1 : 3 
    2 : 0 
    3 : 1 
    4 : 4 
    permutation vector OK

    Symbolic object:  OK


Numeric factorization of A: Numeric object:  
    n_row: 5  n_col: 5
    relative pivot tolerance used:              0.1
    relative symmetric pivot tolerance used:    0.001
    matrix scaled: yes (divided each row by sum abs value in each row)
    minimum sum (abs (rows of A)):              1.00000e+00
    maximum sum (abs (rows of A)):              1.30000e+01
    initial allocation parameter used:          0.7
    frontal matrix allocation parameter used:   0.5
    final total size of Numeric object (Units): 80
    final total size of Numeric object (MBytes): 0.0
    peak size of variable-size part (Units):    1292
    peak size of variable-size part (MBytes):   0.0
    largest actual frontal matrix size:         4
    memory defragmentations:                    1
    memory reallocations:                       1
    costly memory reallocations:                0
    entries in compressed pattern (L and U):    2
    number of nonzeros in L (excl diag):        4
    number of entries stored in L (excl diag):  2
    number of nonzeros in U (excl diag):        4
    number of entries stored in U (excl diag):  2
    factorization floating-point operations:    6
    number of nonzeros on diagonal of U:        5
    min abs. value on diagonal of U:            1.42857e-01
    max abs. value on diagonal of U:            2.19231e+00
    reciprocal condition number estimate:       6.52e-02

Scale factors applied via multiplication
Scale factors, Rs: dense vector, n = 5. 
    0 : (0.2)
    1 : (0.0769231)
    2 : (0.166667)
    3 : (1)
    4 : (0.142857)
    dense vector OK


P: row permutation vector, n = 5. 
    0 : 2 
    1 : 3 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


Q: column permutation vector, n = 5. 
    0 : 3 
    1 : 2 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


L in Numeric object, in column-oriented compressed-pattern form:
    Diagonal entries are all equal to 1.0 (not stored)

    column 0:  length 0.

    column 1:  length 2.
	row 4 :  (0.307692)
	row 3 :  (0.285714)

    column 2:  add 1 entries.  length 1.  Start of Lchain.
	row 4 :  (0.576923)

    column 3:  length 1.
	row 4 :  (3.23077)

    column 4:  length 0.  Start of Lchain.


U in Numeric object, in row-oriented compressed-pattern form:
    Diagonal is stored separately.

    row 4:  length 0.  End of Uchain.

    row 3:  length 1.  End of Uchain.
	col 4 : (0.571429)

    row 2:  length 1.
	col 4 : (0.6)

    row 1:  length 0.  End of Uchain.

    row 1:  length 0.

    row 0:  length 2.
	col 1 :  (-0.5)
	col 4 :  (-0.166667)


diagonal of U: dense vector, n = 5. 
    0 : (0.333333)
    1 : (1)
    2 : (0.4)
    3 : (0.142857)
    4 : (-2.19231)
    dense vector OK

    Numeric object:  OK


UMFPACK V4.4 (Jan. 28, 2005), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used:                none.  UMFPACK will be slow.
    MATLAB:                           no.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       5
    number of columns in matrix A:    5
    entries in matrix A:              12
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of long:                     4 bytes
    size of pointer:                  4 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               2
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S square and diagonal preserved
    pattern of square submatrix S:
        number rows and columns                    3
        symmetry of nonzero pattern:               1.000000
        nz in S+S' (excl. diagonal):               4
        nz on diagonal of matrix S:                2
        fraction of nz on diagonal:                0.666667
    2-by-2 pivoting to place large entries on diagonal:
        # of small diagonal entries of S:          1
        # unmatched:                               0
        symmetry of P2*S:                          0.000000
        nz in P2*S+(P2*S)' (excl. diag.):          6
        nz on diagonal of P2*S:                    3
        fraction of nz on diag of P2*S:            1.000000
    symbolic factorization defragmentations:       0
    symbolic memory usage (Units):                 144
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         45
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              1.00000e+00
    maximum sum (abs (rows of A)):              1.30000e+01

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                      74                   69    93%
        peak size (Units)                       1301                 1292    99%
        final size (Units)                        15                   13    87%
    Numeric final size (Units)                    85                   81    95%
    Numeric final size (MBytes)                  0.0                  0.0    95%
    peak memory usage (Units)                   1473                 1464    99%
    peak memory usage (MBytes)                   0.0                  0.0    99%
    numeric factorization flops          1.30000e+01          6.00000e+00    46%
    nz in L (incl diagonal)                       10                    9    90%
    nz in U (incl diagonal)                       10                    9    90%
    nz in L+U (incl diagonal)                     15                   13    87%
    largest front (# entries)                      9                    4    44%
    largest # rows in front                        3                    2    67%
    largest # columns in front                     3                    2    67%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       9
    nz in U (incl diagonal), if none dropped       9
    number of small entries dropped                0
    nonzeros on diagonal of U:                     5
    min abs. value on diagonal of U:               1.43e-01
    max abs. value on diagonal of U:               2.19e+00
    estimate of reciprocal of condition number:    6.52e-02
    indices in compressed pattern:                 2
    numerical values stored in Numeric object:     9
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

    solve flops:                                   1.19000e+02
    iterative refinement steps taken:              0
    iterative refinement steps attempted:          0
    sparse backward error omega1:                  4.67e-17
    sparse backward error omega2:                  0.00e+00
    solve CPU time (sec):                          0.00
    solve wall clock time (sec):                   0.00

    total symbolic + numeric + solve flops:        1.25000e+02
    total symbolic + numeric + solve CPU time:     0.00
    total symbolic+numeric+solve wall clock time:  0.00


UMFPACK:  Copyright (c) 2005 by Timothy A. Davis.  All Rights Reserved.

UMFPACK V4.4 (Jan. 28, 2005): OK


x (solution of Ax=b): dense vector, n = 5. 
    0 : (1)
    1 : (2)
    2 : (3)
    3 : (4)
    4 : (5)
    dense vector OK

maxnorm of residual: 1.77636e-15


UMFPACK:  Copyright (c) 2005 by Timothy A. Davis.  All Rights Reserved.

UMFPACK V4.4 (Jan. 28, 2005): OK

determinant: (1.14) * 10^(2)

x (solution of Ax=b, solve is split into 3 steps): dense vector, n = 5. 
    0 : (1)
    1 : (2)
    2 : (3)
    3 : (4)
    4 : (5)
    dense vector OK

maxnorm of residual: 1.77636e-15


UMFPACK V4.4 (Jan. 28, 2005), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used:                none.  UMFPACK will be slow.
    MATLAB:                           no.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       5
    number of columns in matrix A:    5
    entries in matrix A:              12
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of long:                     4 bytes
    size of pointer:                  4 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               2
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S square and diagonal preserved
    pattern of square submatrix S:
        number rows and columns                    3
        symmetry of nonzero pattern:               1.000000
        nz in S+S' (excl. diagonal):               4
        nz on diagonal of matrix S:                2
        fraction of nz on diagonal:                0.666667
    2-by-2 pivoting to place large entries on diagonal:
        # of small diagonal entries of S:          1
        # unmatched:                               0
        symmetry of P2*S:                          0.000000
        nz in P2*S+(P2*S)' (excl. diag.):          6
        nz on diagonal of P2*S:                    3
        fraction of nz on diag of P2*S:            1.000000
    symbolic factorization defragmentations:       0
    symbolic memory usage (Units):                 144
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         45
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              1.00000e+00
    maximum sum (abs (rows of A)):              1.30000e+01

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                      74                   69    93%
        peak size (Units)                       1301                 1292    99%
        final size (Units)                        15                   13    87%
    Numeric final size (Units)                    85                   81    95%
    Numeric final size (MBytes)                  0.0                  0.0    95%
    peak memory usage (Units)                   1473                 1464    99%
    peak memory usage (MBytes)                   0.0                  0.0    99%
    numeric factorization flops          1.30000e+01          6.00000e+00    46%
    nz in L (incl diagonal)                       10                    9    90%
    nz in U (incl diagonal)                       10                    9    90%
    nz in L+U (incl diagonal)                     15                   13    87%
    largest front (# entries)                      9                    4    44%
    largest # rows in front                        3                    2    67%
    largest # columns in front                     3                    2    67%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       9
    nz in U (incl diagonal), if none dropped       9
    number of small entries dropped                0
    nonzeros on diagonal of U:                     5
    min abs. value on diagonal of U:               1.43e-01
    max abs. value on diagonal of U:               2.19e+00
    estimate of reciprocal of condition number:    6.52e-02
    indices in compressed pattern:                 2
    numerical values stored in Numeric object:     9
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

    solve flops:                                   1.11000e+02
    iterative refinement steps taken:              0
    iterative refinement steps attempted:          0
    sparse backward error omega1:                  5.84e-17
    sparse backward error omega2:                  0.00e+00
    solve CPU time (sec):                          0.00
    solve wall clock time (sec):                   0.00

    total symbolic + numeric + solve flops:        1.17000e+02
    total symbolic + numeric + solve CPU time:     0.00
    total symbolic+numeric+solve wall clock time:  0.00


x (solution of A'x=b): dense vector, n = 5. 
    0 : (1.81579)
    1 : (1.45614)
    2 : (1.5)
    3 : (-24.8509)
    4 : (10.2632)
    dense vector OK

maxnorm of residual: 7.10543e-15


changing A (1,4) to zero

modified A: column-form matrix, n_row 5 n_col 5, nz = 12. 

    column 0: start: 0 end: 1 entries: 2
	row 0 : (2)
	row 1 : (3)

    column 1: start: 2 end: 4 entries: 3
	row 0 : (3)
	row 2 : (-1)
	row 4 : (4)

    column 2: start: 5 end: 8 entries: 4
	row 1 : (4)
	row 2 : (-3)
	row 3 : (1)
	row 4 : (2)

    column 3: start: 9 end: 9 entries: 1
	row 2 : (2)

    column 4: start: 10 end: 11 entries: 2
	row 1 : (0)
	row 4 : (1)
    column-form matrix OK


Numeric factorization of modified A: Numeric object:  
    n_row: 5  n_col: 5
    relative pivot tolerance used:              0.1
    relative symmetric pivot tolerance used:    0.001
    matrix scaled: yes (divided each row by sum abs value in each row)
    minimum sum (abs (rows of A)):              1.00000e+00
    maximum sum (abs (rows of A)):              7.00000e+00
    initial allocation parameter used:          0.7
    frontal matrix allocation parameter used:   0.5
    final total size of Numeric object (Units): 79
    final total size of Numeric object (MBytes): 0.0
    peak size of variable-size part (Units):    1292
    peak size of variable-size part (MBytes):   0.0
    largest actual frontal matrix size:         4
    memory defragmentations:                    1
    memory reallocations:                       1
    costly memory reallocations:                0
    entries in compressed pattern (L and U):    2
    number of nonzeros in L (excl diag):        4
    number of entries stored in L (excl diag):  2
    number of nonzeros in U (excl diag):        3
    number of entries stored in U (excl diag):  1
    factorization floating-point operations:    4
    number of nonzeros on diagonal of U:        5
    min abs. value on diagonal of U:            1.50000e-01
    max abs. value on diagonal of U:            1.00000e+00
    reciprocal condition number estimate:       1.50e-01

Scale factors applied via multiplication
Scale factors, Rs: dense vector, n = 5. 
    0 : (0.2)
    1 : (0.142857)
    2 : (0.166667)
    3 : (1)
    4 : (0.142857)
    dense vector OK


P: row permutation vector, n = 5. 
    0 : 2 
    1 : 3 
    2 : 1 
    3 : 4 
    4 : 0 
    permutation vector OK


Q: column permutation vector, n = 5. 
    0 : 3 
    1 : 2 
    2 : 0 
    3 : 1 
    4 : 4 
    permutation vector OK


L in Numeric object, in column-oriented compressed-pattern form:
    Diagonal entries are all equal to 1.0 (not stored)

    column 0:  length 0.

    column 1:  length 2.
	row 2 :  (0.571429)
	row 3 :  (0.285714)

    column 2:  add 1 entries.  length 1.  Start of Lchain.
	row 4 :  (0.933333)

    column 3:  length 1.
	row 4 :  (1.05)

    column 4:  length 0.  Start of Lchain.


U in Numeric object, in row-oriented compressed-pattern form:
    Diagonal is stored separately.

    row 4:  length 0.  End of Uchain.

    row 3:  length 1.  End of Uchain.
	col 4 : (0.142857)

    row 2:  length 0.  End of Uchain.

    row 1:  length 0.  End of Uchain.

    row 1:  length 0.

    row 0:  length 2.
	col 1 :  (-0.5)
	col 3 :  (-0.166667)


diagonal of U: dense vector, n = 5. 
    0 : (0.333333)
    1 : (1)
    2 : (0.428571)
    3 : (0.571429)
    4 : (-0.15)
    dense vector OK

    Numeric object:  OK


UMFPACK V4.4 (Jan. 28, 2005), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used:                none.  UMFPACK will be slow.
    MATLAB:                           no.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       5
    number of columns in matrix A:    5
    entries in matrix A:              12
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of long:                     4 bytes
    size of pointer:                  4 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               2
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S square and diagonal preserved
    pattern of square submatrix S:
        number rows and columns                    3
        symmetry of nonzero pattern:               1.000000
        nz in S+S' (excl. diagonal):               4
        nz on diagonal of matrix S:                2
        fraction of nz on diagonal:                0.666667
    2-by-2 pivoting to place large entries on diagonal:
        # of small diagonal entries of S:          1
        # unmatched:                               0
        symmetry of P2*S:                          0.000000
        nz in P2*S+(P2*S)' (excl. diag.):          6
        nz on diagonal of P2*S:                    3
        fraction of nz on diag of P2*S:            1.000000
    symbolic factorization defragmentations:       0
    symbolic memory usage (Units):                 144
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         45
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              1.00000e+00
    maximum sum (abs (rows of A)):              7.00000e+00

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                      74                   69    93%
        peak size (Units)                       1301                 1292    99%
        final size (Units)                        15                   12    80%
    Numeric final size (Units)                    85                   80    94%
    Numeric final size (MBytes)                  0.0                  0.0    94%
    peak memory usage (Units)                   1473                 1464    99%
    peak memory usage (MBytes)                   0.0                  0.0    99%
    numeric factorization flops          1.30000e+01          4.00000e+00    31%
    nz in L (incl diagonal)                       10                    9    90%
    nz in U (incl diagonal)                       10                    8    80%
    nz in L+U (incl diagonal)                     15                   12    80%
    largest front (# entries)                      9                    4    44%
    largest # rows in front                        3                    2    67%
    largest # columns in front                     3                    2    67%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       9
    nz in U (incl diagonal), if none dropped       8
    number of small entries dropped                0
    nonzeros on diagonal of U:                     5
    min abs. value on diagonal of U:               1.50e-01
    max abs. value on diagonal of U:               1.00e+00
    estimate of reciprocal of condition number:    1.50e-01
    indices in compressed pattern:                 2
    numerical values stored in Numeric object:     8
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

    solve flops:                                   1.17000e+02
    iterative refinement steps taken:              0
    iterative refinement steps attempted:          0
    sparse backward error omega1:                  5.92e-17
    sparse backward error omega2:                  0.00e+00
    solve CPU time (sec):                          0.00
    solve wall clock time (sec):                   0.00

    total symbolic + numeric + solve flops:        1.21000e+02
    total symbolic + numeric + solve CPU time:     0.00
    total symbolic+numeric+solve wall clock time:  0.00


x (with modified A): dense vector, n = 5. 
    0 : (11)
    1 : (-4.66667)
    2 : (3)
    3 : (0.666667)
    4 : (31.6667)
    dense vector OK

maxnorm of residual: 5.32907e-15

changing A (0,0) from 2 to 2
changing A (1,0) from 3 to 2
changing A (0,1) from 3 to 13
changing A (2,1) from -1 to 7
changing A (4,1) from 4 to 10
changing A (1,2) from 4 to 23
changing A (2,2) from -3 to 15
changing A (3,2) from 1 to 18
changing A (4,2) from 2 to 18
changing A (2,3) from 2 to 30
changing A (1,4) from 0 to 39
changing A (4,4) from 1 to 37

completely modified A (same pattern): column-form matrix, n_row 5 n_col 5, nz = 12. 

    column 0: start: 0 end: 1 entries: 2
	row 0 : (2)
	row 1 : (2)

    column 1: start: 2 end: 4 entries: 3
	row 0 : (13)
	row 2 : (7)
	row 4 : (10)

    column 2: start: 5 end: 8 entries: 4
	row 1 : (23)
	row 2 : (15)
	row 3 : (18)
	row 4 : (18)

    column 3: start: 9 end: 9 entries: 1
	row 2 : (30)

    column 4: start: 10 end: 11 entries: 2
	row 1 : (39)
	row 4 : (37)
    column-form matrix OK


Saving symbolic object:

Freeing symbolic object:

Loading symbolic object:

Done loading symbolic object

Numeric factorization of completely modified A: Numeric object:  
    n_row: 5  n_col: 5
    relative pivot tolerance used:              0.1
    relative symmetric pivot tolerance used:    0.001
    matrix scaled: yes (divided each row by sum abs value in each row)
    minimum sum (abs (rows of A)):              1.50000e+01
    maximum sum (abs (rows of A)):              6.50000e+01
    initial allocation parameter used:          0.7
    frontal matrix allocation parameter used:   0.5
    final total size of Numeric object (Units): 80
    final total size of Numeric object (MBytes): 0.0
    peak size of variable-size part (Units):    1292
    peak size of variable-size part (MBytes):   0.0
    largest actual frontal matrix size:         4
    memory defragmentations:                    1
    memory reallocations:                       1
    costly memory reallocations:                0
    entries in compressed pattern (L and U):    2
    number of nonzeros in L (excl diag):        4
    number of entries stored in L (excl diag):  2
    number of nonzeros in U (excl diag):        4
    number of entries stored in U (excl diag):  2
    factorization floating-point operations:    6
    number of nonzeros on diagonal of U:        5
    min abs. value on diagonal of U:            1.33333e-01
    max abs. value on diagonal of U:            1.00000e+00
    reciprocal condition number estimate:       1.33e-01

Scale factors applied via multiplication
Scale factors, Rs: dense vector, n = 5. 
    0 : (0.0666667)
    1 : (0.015625)
    2 : (0.0192308)
    3 : (0.0555556)
    4 : (0.0153846)
    dense vector OK


P: row permutation vector, n = 5. 
    0 : 2 
    1 : 3 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


Q: column permutation vector, n = 5. 
    0 : 3 
    1 : 2 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


L in Numeric object, in column-oriented compressed-pattern form:
    Diagonal entries are all equal to 1.0 (not stored)

    column 0:  length 0.

    column 1:  length 2.
	row 4 :  (0.359375)
	row 3 :  (0.276923)

    column 2:  add 1 entries.  length 1.  Start of Lchain.
	row 4 :  (0.234375)

    column 3:  length 1.
	row 4 :  (1.07052)

    column 4:  length 0.  Start of Lchain.


U in Numeric object, in row-oriented compressed-pattern form:
    Diagonal is stored separately.

    row 4:  length 0.  End of Uchain.

    row 3:  length 1.  End of Uchain.
	col 4 : (0.153846)

    row 2:  length 1.
	col 4 : (0.866667)

    row 1:  length 0.  End of Uchain.

    row 1:  length 0.

    row 0:  length 2.
	col 1 :  (0.288462)
	col 4 :  (0.134615)


diagonal of U: dense vector, n = 5. 
    0 : (0.576923)
    1 : (1)
    2 : (0.133333)
    3 : (0.569231)
    4 : (-0.367821)
    dense vector OK

    Numeric object:  OK


UMFPACK V4.4 (Jan. 28, 2005), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used:                none.  UMFPACK will be slow.
    MATLAB:                           no.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       5
    number of columns in matrix A:    5
    entries in matrix A:              12
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of long:                     4 bytes
    size of pointer:                  4 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               2
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S square and diagonal preserved
    pattern of square submatrix S:
        number rows and columns                    3
        symmetry of nonzero pattern:               1.000000
        nz in S+S' (excl. diagonal):               4
        nz on diagonal of matrix S:                2
        fraction of nz on diagonal:                0.666667
    2-by-2 pivoting to place large entries on diagonal:
        # of small diagonal entries of S:          1
        # unmatched:                               0
        symmetry of P2*S:                          0.000000
        nz in P2*S+(P2*S)' (excl. diag.):          6
        nz on diagonal of P2*S:                    3
        fraction of nz on diag of P2*S:            1.000000
    symbolic factorization defragmentations:       0
    symbolic memory usage (Units):                 144
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         45
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              1.50000e+01
    maximum sum (abs (rows of A)):              6.50000e+01

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                      74                   69    93%
        peak size (Units)                       1301                 1292    99%
        final size (Units)                        15                   13    87%
    Numeric final size (Units)                    85                   81    95%
    Numeric final size (MBytes)                  0.0                  0.0    95%
    peak memory usage (Units)                   1473                 1464    99%
    peak memory usage (MBytes)                   0.0                  0.0    99%
    numeric factorization flops          1.30000e+01          6.00000e+00    46%
    nz in L (incl diagonal)                       10                    9    90%
    nz in U (incl diagonal)                       10                    9    90%
    nz in L+U (incl diagonal)                     15                   13    87%
    largest front (# entries)                      9                    4    44%
    largest # rows in front                        3                    2    67%
    largest # columns in front                     3                    2    67%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       9
    nz in U (incl diagonal), if none dropped       9
    number of small entries dropped                0
    nonzeros on diagonal of U:                     5
    min abs. value on diagonal of U:               1.33e-01
    max abs. value on diagonal of U:               1.00e+00
    estimate of reciprocal of condition number:    1.33e-01
    indices in compressed pattern:                 2
    numerical values stored in Numeric object:     9
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

    solve flops:                                   1.19000e+02
    iterative refinement steps taken:              0
    iterative refinement steps attempted:          0
    sparse backward error omega1:                  3.70e-17
    sparse backward error omega2:                  0.00e+00
    solve CPU time (sec):                          0.00
    solve wall clock time (sec):                   0.00

    total symbolic + numeric + solve flops:        1.25000e+02
    total symbolic + numeric + solve CPU time:     0.00
    total symbolic+numeric+solve wall clock time:  0.00


x (with completely modified A): dense vector, n = 5. 
    0 : (8.50124)
    1 : (-0.692499)
    2 : (0.166667)
    3 : (-0.0217502)
    4 : (0.619594)
    dense vector OK

maxnorm of residual: 3.33067e-15


C (transpose of A): column-form matrix, n_row 5 n_col 5, nz = 12. 

    column 0: start: 0 end: 1 entries: 2
	row 0 : (2)
	row 1 : (13)

    column 1: start: 2 end: 4 entries: 3
	row 0 : (2)
	row 2 : (23)
	row 4 : (39)

    column 2: start: 5 end: 7 entries: 3
	row 1 : (7)
	row 2 : (15)
	row 3 : (30)

    column 3: start: 8 end: 8 entries: 1
	row 2 : (18)

    column 4: start: 9 end: 11 entries: 3
	row 1 : (10)
	row 2 : (18)
	row 4 : (37)
    column-form matrix OK


Symbolic factorization of C: Symbolic object: 
    matrix to be factorized:
	n_row: 5 n_col: 5
	number of entries: 12
    block size used for dense matrix kernels:   32
    strategy used:                              unsymmetric
    ordering used:                              colamd on A

    performn column etree postorder:            yes
    prefer diagonal pivoting (attempt P=Q):     no
    variable-size part of Numeric object:
	minimum initial size (Units): 75  (MBytes): 0.0
	estimated peak size (Units):  1302  (MBytes): 0.0
	estimated final size (Units): 16  (MBytes): 0.0
    symbolic factorization memory usage (Units): 144  (MBytes): 0.0
    frontal matrices / supercolumns:
	number of frontal chains: 1
	number of frontal matrices: 1
	largest frontal matrix row dimension: 3
	largest frontal matrix column dimension: 3

    Frontal chain: 0.  Frontal matrices 0 to 0
	Largest frontal matrix in Frontal chain: 3-by-3
	Front: 0  pivot cols: 3 (pivot columns 0 to 2)
	    pivot row candidates: 2 to 4
	    leftmost descendant: 0
	    1st new candidate row : 2
	    parent: (none)

Initial column permutation, Q1: permutation vector, n = 5. 
    0 : 3 
    1 : 2 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


Initial row permutation, P1: permutation vector, n = 5. 
    0 : 2 
    1 : 3 
    2 : 0 
    3 : 1 
    4 : 4 
    permutation vector OK

    Symbolic object:  OK


Get the contents of the Symbolic object for C:
(compare with umfpack_di_report_symbolic output, above)
From the Symbolic object, C is of dimension 5-by-5
   with nz = 12, number of fronts = 1,
   number of frontal matrix chains = 1

Pivot columns in each front, and parent of each front:
    Front 0: parent front: -1 number of pivot cols: 3
        0-th pivot column is column 3 in original matrix
        1-th pivot column is column 2 in original matrix
        2-th pivot column is column 0 in original matrix

Note that the column ordering, above, will be refined
in the numeric factorization below.  The assignment of pivot
columns to frontal matrices will always remain unchanged.

Total number of pivot columns in frontal matrices: 3

Frontal matrix chains:
   Frontal matrices 0 to 0 are factorized in a single
        working array of size 3-by-3

Numeric factorization of C: Numeric object:  
    n_row: 5  n_col: 5
    relative pivot tolerance used:              0.1
    relative symmetric pivot tolerance used:    0.001
    matrix scaled: yes (divided each row by sum abs value in each row)
    minimum sum (abs (rows of A)):              4.00000e+00
    maximum sum (abs (rows of A)):              7.60000e+01
    initial allocation parameter used:          0.7
    frontal matrix allocation parameter used:   0.5
    final total size of Numeric object (Units): 81
    final total size of Numeric object (MBytes): 0.0
    peak size of variable-size part (Units):    1293
    peak size of variable-size part (MBytes):   0.0
    largest actual frontal matrix size:         4
    memory defragmentations:                    1
    memory reallocations:                       1
    costly memory reallocations:                0
    entries in compressed pattern (L and U):    2
    number of nonzeros in L (excl diag):        3
    number of entries stored in L (excl diag):  2
    number of nonzeros in U (excl diag):        5
    number of entries stored in U (excl diag):  2
    factorization floating-point operations:    6
    number of nonzeros on diagonal of U:        5
    min abs. value on diagonal of U:            2.43243e-01
    max abs. value on diagonal of U:            1.00000e+00
    reciprocal condition number estimate:       2.43e-01

Scale factors applied via multiplication
Scale factors, Rs: dense vector, n = 5. 
    0 : (0.25)
    1 : (0.0333333)
    2 : (0.0135135)
    3 : (0.0333333)
    4 : (0.0131579)
    dense vector OK


P: row permutation vector, n = 5. 
    0 : 2 
    1 : 3 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


Q: column permutation vector, n = 5. 
    0 : 3 
    1 : 2 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


L in Numeric object, in column-oriented compressed-pattern form:
    Diagonal entries are all equal to 1.0 (not stored)

    column 0:  length 0.

    column 1:  length 1.
	row 4 :  (0.233333)

    column 2:  add 1 entries.  length 1.  Start of Lchain.
	row 4 :  (0.866667)

    column 3:  length 1.
	row 4 :  (0.684685)

    column 4:  length 0.  Start of Lchain.


U in Numeric object, in row-oriented compressed-pattern form:
    Diagonal is stored separately.

    row 4:  length 0.  End of Uchain.

    row 3:  length 1.  End of Uchain.
	col 4 : (0.513158)

    row 2:  length 1.
	col 4 : (0.5)

    row 1:  length 0.  End of Uchain.

    row 1:  length 0.

    row 0:  length 3.
	col 1 :  (0.202703)
	col 3 :  (0.243243)
	col 4 :  (0.310811)


diagonal of U: dense vector, n = 5. 
    0 : (0.243243)
    1 : (1)
    2 : (0.5)
    3 : (0.486842)
    4 : (-0.784685)
    dense vector OK

    Numeric object:  OK


L (lower triangular factor of C): row-form matrix, n_row 5 n_col 5, nz = 8. 

    row 0: start: 0 end: 0 entries: 1
	column 0 : (1)

    row 1: start: 1 end: 1 entries: 1
	column 1 : (1)

    row 2: start: 2 end: 2 entries: 1
	column 2 : (1)

    row 3: start: 3 end: 3 entries: 1
	column 3 : (1)

    row 4: start: 4 end: 7 entries: 4
	column 1 : (0.233333)
	column 2 : (0.866667)
	column 3 : (0.684685)
	column 4 : (1)
    row-form matrix OK


U (upper triangular factor of C): column-form matrix, n_row 5 n_col 5, nz = 10. 

    column 0: start: 0 end: 0 entries: 1
	row 0 : (0.243243)

    column 1: start: 1 end: 2 entries: 2
	row 0 : (0.202703)
	row 1 : (1)

    column 2: start: 3 end: 3 entries: 1
	row 2 : (0.5)

    column 3: start: 4 end: 5 entries: 2
	row 0 : (0.243243)
	row 3 : (0.486842)

    column 4: start: 6 end: 9 entries: 4
	row 0 : (0.310811)
	row 2 : (0.5)
	row 3 : (0.513158)
	row 4 : (-0.784685)
    column-form matrix OK


P: permutation vector, n = 5. 
    0 : 2 
    1 : 3 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


Q: permutation vector, n = 5. 
    0 : 3 
    1 : 2 
    2 : 0 
    3 : 4 
    4 : 1 
    permutation vector OK


Scale factors: row i of A is to be multiplied by the ith scale factor
0: 0.25
1: 0.0333333
2: 0.0135135
3: 0.0333333
4: 0.0131579

Converting L to triplet form, and printing it:

L, in triplet form: triplet-form matrix, n_row = 5, n_col = 5 nz = 8. 
    0 : 0 0  (1)
    1 : 1 1  (1)
    2 : 2 2  (1)
    3 : 3 3  (1)
    4 : 4 1  (0.233333)
    5 : 4 2  (0.866667)
    6 : 4 3  (0.684685)
    7 : 4 4  (1)
    triplet-form matrix OK


Saving numeric object:

Freeing numeric object:

Loading numeric object:

Done loading numeric object

UMFPACK V4.4 (Jan. 28, 2005), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used:                none.  UMFPACK will be slow.
    MATLAB:                           no.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       5
    number of columns in matrix A:    5
    entries in matrix A:              12
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of long:                     4 bytes
    size of pointer:                  4 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               2
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S square and diagonal preserved
    pattern of square submatrix S:
        number rows and columns                    3
        symmetry of nonzero pattern:               1.000000
        nz in S+S' (excl. diagonal):               4
        nz on diagonal of matrix S:                2
        fraction of nz on diagonal:                0.666667
    2-by-2 pivoting to place large entries on diagonal:
        # of small diagonal entries of S:          1
        # unmatched:                               0
        symmetry of P2*S:                          0.000000
        nz in P2*S+(P2*S)' (excl. diag.):          6
        nz on diagonal of P2*S:                    3
        fraction of nz on diag of P2*S:            1.000000
    symbolic factorization defragmentations:       0
    symbolic memory usage (Units):                 144
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         45
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              4.00000e+00
    maximum sum (abs (rows of A)):              7.60000e+01

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                      75                   70    93%
        peak size (Units)                       1302                 1293    99%
        final size (Units)                        16                   14    88%
    Numeric final size (Units)                    86                   82    95%
    Numeric final size (MBytes)                  0.0                  0.0    95%
    peak memory usage (Units)                   1474                 1465    99%
    peak memory usage (MBytes)                   0.0                  0.0    99%
    numeric factorization flops          1.30000e+01          6.00000e+00    46%
    nz in L (incl diagonal)                        9                    8    89%
    nz in U (incl diagonal)                       11                   10    91%
    nz in L+U (incl diagonal)                     15                   13    87%
    largest front (# entries)                      9                    4    44%
    largest # rows in front                        3                    2    67%
    largest # columns in front                     3                    2    67%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       8
    nz in U (incl diagonal), if none dropped       10
    number of small entries dropped                0
    nonzeros on diagonal of U:                     5
    min abs. value on diagonal of U:               2.43e-01
    max abs. value on diagonal of U:               1.00e+00
    estimate of reciprocal of condition number:    2.43e-01
    indices in compressed pattern:                 2
    numerical values stored in Numeric object:     9
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

    solve flops:                                   1.11000e+02
    iterative refinement steps taken:              0
    iterative refinement steps attempted:          0
    sparse backward error omega1:                  7.60e-17
    sparse backward error omega2:                  0.00e+00
    solve CPU time (sec):                          0.00
    solve wall clock time (sec):                   0.00

    total symbolic + numeric + solve flops:        1.17000e+02
    total symbolic + numeric + solve CPU time:     0.00
    total symbolic+numeric+solve wall clock time:  0.00


x (solution of C'x=b): dense vector, n = 5. 
    0 : (8.50124)
    1 : (-0.692499)
    2 : (0.166667)
    3 : (-0.0217502)
    4 : (0.619594)
    dense vector OK

maxnorm of residual: 4.77396e-15


Solving C'x=b again, using umfpack_di_wsolve instead:

UMFPACK V4.4 (Jan. 28, 2005), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used:                none.  UMFPACK will be slow.
    MATLAB:                           no.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       5
    number of columns in matrix A:    5
    entries in matrix A:              12
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of long:                     4 bytes
    size of pointer:                  4 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               2
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S square and diagonal preserved
    pattern of square submatrix S:
        number rows and columns                    3
        symmetry of nonzero pattern:               1.000000
        nz in S+S' (excl. diagonal):               4
        nz on diagonal of matrix S:                2
        fraction of nz on diagonal:                0.666667
    2-by-2 pivoting to place large entries on diagonal:
        # of small diagonal entries of S:          1
        # unmatched:                               0
        symmetry of P2*S:                          0.000000
        nz in P2*S+(P2*S)' (excl. diag.):          6
        nz on diagonal of P2*S:                    3
        fraction of nz on diag of P2*S:            1.000000
    symbolic factorization defragmentations:       0
    symbolic memory usage (Units):                 144
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         45
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              4.00000e+00
    maximum sum (abs (rows of A)):              7.60000e+01

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                      75                   70    93%
        peak size (Units)                       1302                 1293    99%
        final size (Units)                        16                   14    88%
    Numeric final size (Units)                    86                   82    95%
    Numeric final size (MBytes)                  0.0                  0.0    95%
    peak memory usage (Units)                   1474                 1465    99%
    peak memory usage (MBytes)                   0.0                  0.0    99%
    numeric factorization flops          1.30000e+01          6.00000e+00    46%
    nz in L (incl diagonal)                        9                    8    89%
    nz in U (incl diagonal)                       11                   10    91%
    nz in L+U (incl diagonal)                     15                   13    87%
    largest front (# entries)                      9                    4    44%
    largest # rows in front                        3                    2    67%
    largest # columns in front                     3                    2    67%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       8
    nz in U (incl diagonal), if none dropped       10
    number of small entries dropped                0
    nonzeros on diagonal of U:                     5
    min abs. value on diagonal of U:               2.43e-01
    max abs. value on diagonal of U:               1.00e+00
    estimate of reciprocal of condition number:    2.43e-01
    indices in compressed pattern:                 2
    numerical values stored in Numeric object:     9
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

    solve flops:                                   1.11000e+02
    iterative refinement steps taken:              0
    iterative refinement steps attempted:          0
    sparse backward error omega1:                  7.60e-17
    sparse backward error omega2:                  0.00e+00
    solve CPU time (sec):                          0.00
    solve wall clock time (sec):                   0.00

    total symbolic + numeric + solve flops:        1.17000e+02
    total symbolic + numeric + solve CPU time:     0.00
    total symbolic+numeric+solve wall clock time:  0.00


x (solution of C'x=b): dense vector, n = 5. 
    0 : (8.50124)
    1 : (-0.692499)
    2 : (0.166667)
    3 : (-0.0217502)
    4 : (0.619594)
    dense vector OK

maxnorm of residual: 4.77396e-15


umfpack_di_demo complete.
Total time:  0.00 seconds (CPU time),  0.00 seconds (wallclock time)
