!---------------------------------------------------------------------------------------------
! Fitting to noicy or missing data by DataToFieldSolver.
!
! Example shows how to create a continuous field of a data that has missing or unusable values.
! The initial signal is a linear model f=x+2y. A trigometric noise in [-1,1] is added to this. 
! When fitting the field to the data only values where the noise is at [-0.1,0.1] is considered.
! The boundary conditions must cancel the natural BCs since otherwise the fitting would enforce
! zero flux. 
!
! The distrurbing thing with the current example is that there must be some piece of Dirichlet
! conditions since otherwise the results become unusable. There seems to be a severe sensitivity
! to the total flux being conserved. 
!
! Case created 6.3.2013 / Peter Råback
!---------------------------------------------------------------------------------------------

Check Keywords Warn


Header
  Mesh DB "." "square"
End
 
Simulation
  Max Output Level = 32
  Coordinate System = Cartesian 
  Simulation Type = Steady State
  Steady State Max Iterations = 1
  Output Intervals = 1
End

Constants
  Permittivity Of Vacuum = 1.0
  Gravity(4) = 0 -1 0 1
End

Body 1
  Equation = 1
  Material = 1
  Initial Condition = 1 
End

Equation 1
  Active Solvers(2) = 1 2 
End


Solver 1
  Equation = String "FitData"
  Procedure = File "DataToFieldSolver" "DataToFieldSolver"
  Variable = Fit

  Target Variable = String "Data"

! Optional parameters not applicable to this case:
!  Weight Variable = String "Particle Weight"
!  Normalize by Given Weight = Logical True
!  Normalize by Nodal Weight = Logical True
     
! The variable used for masking and the interval [min,max] at which the values must 
! be to be considered ok. For the ok nodes the Diffusion coefficient may be optionally
! neglected. When done so the usable diffusion coefficient range is considerably larger.
  Mask Variable = String "Mask"
  Min Mask Value = Real -0.01
  Max Mask Value = Real 0.01
  Mask Diffusion = Logical True

! Regularization parameter. There is typically a range of few orders of maginitude.  
  Diffusion Coefficient = Real 1.0e-5

  Continue BC With Boundary Assembly = Logical True
  
! Linear system options
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations = 5000
  Linear System Convergence Tolerance = 1.0e-10
  Linear System Preconditioning = none
  Linear System Residual Output = 50
  Linear System Abort Not Converged = True

! reserve space of the "data" and "mask" variables
! that are used to perform the fitting. 
  Exported Variable 1 = data
  Exported Variable 2 = mask
End


Solver 2
!  Exec Solver = never
  Equation = "ResultOutput"
  Procedure = "ResultOutputSolve" "ResultOutputSolver"
  Output File Name = "case" 
  Output Format = "vtu"
End

Initial Condition 1 
  Name = "InitFields"

! Linear signal with a trigonometric noise
  Data = Variable Coordinate
    Real MATC "1+tx(0)+2*tx(1)+3*sin(15*tx(0))*cos(10*tx(1))" 

! Trigonometric noise, mask is active only in [-0.1,0.1]
  Mask = Variable Coordinate 
    Real MATC "sin(15*tx(0))*cos(10*tx(1))" 
End 


Material 1
  Name = "Ideal"
End

! The free boundaries where the natural BC is cancelled
Boundary Condition 1
  Name = "Free"
  Target Boundaries(3) = 1 3 4

  Fit Continue = Logical True
End

! There must unfortunately be some fixed values
! for a proper solution. 
Boundary Condition 2
  Name = "Fixed"
  Target Boundaries(1) = 2

!  Fit Continue = Logical True

  Fit = Variable Coordinate
    Real MATC "1+tx(0)+2*tx(1)"
End


Solver 1 :: Reference Norm = Real 2.5877452
$fprintf( stderr, "TEST CASE 1\n")$
RUN
$fprintf( stderr,"END TEST CASE 1: Target NRM=2.5877452\n");
