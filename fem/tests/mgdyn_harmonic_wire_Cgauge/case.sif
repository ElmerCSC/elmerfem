! This test case computes the magnetic field induced by a cylindrical wire
! The field outside the wire should be |B|=\mu*I/(2*pi*r).
! If I=1 A and r=0.01 m then |B|=2.0e-4.
! The computed result is 1.974e-4 i.e. error of around 1%.
!
! To the base case different is that electric potential is solved alongside
! and no bodyforce is used, and this is also harmonic requiring additionally
! the frequency. 
!
! P.R. 23.9.2016

!
! This version enforces Coulomb gauge (div(A)=0) as an afterthought.
!
! J.R. 18.6.2021
!

Check Keywords "Warn"

Header
  Mesh DB "." "wire"
End

Simulation
  Max Output Level = 8

  Coordinate System = "Cartesian"
  Simulation Type = Steady
  Output Intervals(1) = 1
  Steady State Max Iterations = 1

  Coordinate Scaling = 1.0e-3

  $ w = 1.0e5
  Angular Frequency = Real $w
End

Body 1
  Name = "Wire"
  Equation = 1
  Material = 1
End

Body 2
  Name = "Air"
  Equation = 1
  Material = 2
End

Material 1
  Name = "Cu"
  Relative Permittivity = 1
  Relative Permeability = 1
  Electric Conductivity = 58e6
End

Material 2
  Name = "Air"
  Relative Permittivity = 1.0
  Relative Permeability = 1.0
  Electric Conductivity = 0.0
End 

Equation 1 :: Active Solvers(4) = 1 2 3 4

Solver 1
  Equation = "MGDynamics"

  Variable = "AV[AV re:1 AV im:1]"
  Procedure = "MagnetoDynamics" "WhitneyAVHarmonicSolver"

  Edge Basis = True
  Linear System Solver = "Iterative"
  Linear System Symmetric = True
  Linear System Preconditioning = ILU
  Linear System Residual Output = 100
  Linear System Max Iterations  = 2000
  Linear System Iterative Method = BiCGStabL
  Linear System Convergence Tolerance = 1.0e-8
End


! Compute (grad(P),grad(q)) = (A, grad(q)) (+boundary terms), V = V+i*omega*P
! ---------------------------------------------------------------------------
Solver 2
  Equation = "MGDynamics P"

  Variable = "Pd"
  Procedure = "HelmholtzProjectionHarmonic" "HelmHoltzProjector"

  Potential Variable = String "AV"

  ! Solver is using a single linear system to solve complex components,
  ! assign storage for final complex result.
  ! -------------------------------------------------------------------
  Exported Variable 1 = "P[P re:1 P im:1]"

  Linear System Symmetric = True
  Linear System Solver = "Iterative"
  Linear System Preconditioning = ILU
  Linear System Residual Output = 25
  Linear System Max Iterations = 2000
  Linear System Iterative Method = CG
  Linear System Convergence Tolerance = 1.0e-9
End


! Compute (Q,w) = (grad(P),w) (+boundary terms), A = A-Q
! Modified vector potential field A fulfills div(A)=0
! ------------------------------------------------------------
Solver 3
  Equation = "MGDynamics AVM"

  Variable = "AVM"
  Procedure = "HelmholtzProjectionHarmonic" "RemoveKernelComponent"

  Kernel Variable = String "P"
  Potential Variable = String "AV"

  ! Solver is using a single linear system to solve complex components,
  ! the final result is the (Hcurl) imaginary component...
  ! -------------------------------------------------------------------

  Linear System Symmetric = True
  Linear System Solver = "Iterative"
  Linear System Preconditioning = None
  Linear System Residual Output = 25 
  Linear System Max Iterations = 2000
  Linear System Iterative Method = CG
  Linear System Convergence Tolerance = 1.0e-9
End


Solver 4
  Equation = "MGDynamicsCalc"

  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  Linear System Symmetric = True

  Potential Variable = String "AV"

  Calculate Current Density = Logical True
  Calculate Electric Field = Logical True
  Calculate Magnetic Field Strength = Logical True
  Calculate Joule Heating = True

  Steady State Convergence Tolerance = 0
  Linear System Solver = "Iterative"
  Linear System Preconditioning = None
  Linear System Residual Output = 0
  Linear System Max Iterations = 5000
  Linear System Iterative Method = CG
  Linear System Convergence Tolerance = 1.0e-8

  Calculate Nodal Fields = Logical False
  Impose Body Force Potential = Logical True
  Impose Body Force Current = Logical True

  Discontinuous Bodies = True
  Calculate Harmonic Peak Power = logical true
End


Solver 5
  Exec Solver = after all
  Equation = "ResultOutput"

  Procedure = "ResultOutputSolve" "ResultOutputSolver"
  Vtu format = Logical True
  Output File Name = Wire
  Discontinuous Bodies = Logical True

! Reference Values(6) = Real 59 13 206250 2064 402220888 4.178146196
! Reference Norm = 1.0
End

Solver 6
  Equation = "SaveLine"
  Procedure = "SaveData" "SaveLine"

  FileName = f.dat

  Polyline Coordinates(2,3) = -5.0e-3 0.0 5.0e-3 5.0e-3 0.0 5.0e-3
  Polyline Divisions(1) = 200 

! The Joule heating 
  Show Norm Index = Integer 35
End

Solver 7
! Exec Solver = after all
  Equation = "SaveScalars"
  Procedure = "SaveData" "SaveScalars"

  FileName = s.dat

! Components of the complex total current
  Variable 1 = Current Density Im e 3
  Operator 1 = Boundary int

  Variable 2 = Current Density Re e 3
  Operator 2 = Boundary int

! Components of the complex voltage
  Variable 3 = AV re
  Operator 3 = Boundary mean

  Variable 4 = AV im
  Operator 4 = Boundary mean

! This is just to create a testable norm 
  Show norm index = 5
End


Boundary Condition 1
  Name = "WireStart"
  Target Boundaries(1) = 1 

  AV re = Real 5.542e-5
  AV im = Real 0.0

  Pd = Real 0
  AVM {e} = Real 0

  AV re {e} = Real 0.0
  AV im {e} = Real 0.0
End

Boundary Condition 2
  Name = "WireSurface"
  Target Boundaries(1) = 2
End

Boundary Condition 3
  Name = "WireEnd"
  Target Boundaries(1) = 3

  AV re = Real 0.0
  AV im = Real 0.0

  Pd = Real 0
  AVM {e} = Real 0

  AV re {e} = Real 0.0
  AV im {e} = Real 0.0

  Save Scalars = True
End

Boundary Condition 4
  Name = "AirStart"
  Target Boundaries(1) = 4

  Pd = real 0
  AVM {e}  = Real 0

  AV re {e} = Real 0
  AV im {e} = Real 0
End


Boundary Condition 5
  Name = "AirSurface"
  Target Boundaries(1) = 5

  Pd = real 0
  AVM {e} = Real 0

  AV re {e} = Real 0
  AV im {e} = Real 0
End

Boundary Condition 6
  Name = "AirEnd"
  Target Boundaries(1) = 6 

  Pd = real 0
  AVM {e} = Real 0

  AV re {e} = Real 0
  AV im {e} = Real 0
End

Solver 1 :: Reference Norm = 4.62227583E-06
Solver 1 :: Reference Norm Tolerance = 1e-4
Solver 2 :: Reference Norm = 2.40327023E-10
Solver 2 :: Reference Norm Tolerance = 1e-3
Solver 3 :: Reference Norm = 7.29761264E-11
Solver 3 :: Reference Norm Tolerance = 1e-3
Solver 6 :: Reference Norm = 1.60131866E+03
Solver 6 :: Reference Norm Tolerance = 1e-3
Solver 7 :: Reference Norm = 1.51603302E-06
Solver 7 :: Reference Norm Tolerance = 1e-3
