Header
  CHECK KEYWORDS Warn
  Mesh DB "." "angle"
  Include Path ""
  Results Directory ""
End

Simulation
  Max Output Level = 6
  Coordinate System = "Cartesian 2D"
  Coordinate Mapping(3) = 1 2 3

  Steady State Max Iterations = 1
  Output Intervals = 1
  Simulation Type = Transient
  Timestepping Method = BDF

  BDF Order = 1

! First timestep with zero is only possible because it is solved in steady-state
! Note that for bdf2 you cannot use 0.0 timestep 
  Timestep Sizes(2) = 0.0 0.1 
  Timestep Intervals(2) = 1 10
  Output Intervals(2) = 1 1
!  Post File = "data.ep"
End

Constants
  Gravity(4) = 0 -1 0 9.82
  Stefan Boltzmann = 5.67e-08
End

Body 1
  Name = "Body1"

  Body Force = 1
  Equation = 1
  Material = 1
End

Equation 1
  Name = "Equation1"
  Active Solvers = 1 
End

Solver 1
  Equation = "heat"
  Variable = "Temp"
  Procedure = "HeatSolve" "HeatSolver"

! This condition enforces steady state
! 1st time it's 0.5 i.e. true, after that always negative i.e. false
  Steady State Condition = Variable TimeStep
    Real MATC "1.5-tx"

  Linear System Solver = "Direct"
  Linear System Direct Method = "umfpack"
  Steady State Convergence Tolerance = 1.0e-05

  Stabilize = True
  Nonlinear System Convergence Tolerance = 1.0e-05
  Nonlinear System Max Iterations = 1
  Nonlinear System Relaxation Factor = 1.0
  Nonlinear System Newton After Iterations = 3
  Nonlinear System Newton After Tolerance = 1.0e-02

  Optimize Bandwidth = FALSE
End


Solver 2 
  Exec Solver = never
  Equation = "save scalars"
  Procedure = "SaveData" "SaveScalars"
  Variable 1 = Temp
  Operator 1 = int mean
  Variable 2 = Temp
  Operator 2 = max
  Variable 3 = Time
  Filename = f.dat
End 


Material 1
  Name = "Material1"
  Density = 1.0
  Heat Conductivity = 1.0
  Heat Capacity = 10.0
End

Body Force 1
  Name = "BodyForce1"

! Add a little time-dependence to heat source to show that it can continue as transient
! This is exponentially decaying field
  Heat Source = Variable Time 
    Real MATC "exp(-tx)"
End

Boundary Condition 1
  Name = "Constraint1"
  Target Boundaries = 1 
  Temp = Real 0
End

Solver 1 :: Reference Norm = Real 5.65119470182129241E-002
$ fprintf( stderr, "\n\nTEST CASE 1\n");
RUN
$ fprintf( stderr, "END TEST CASE 1: Target NRM= 5.65119470182129241E-002\n");


