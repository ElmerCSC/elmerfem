! This is a test case for soft limiters that is derived from test case "LimitDisplacement2Mesh"
! except this case is transient and involves rigid body movement of the 2nd mesh.
!
! P.R. 11.7.2024

Header
  CHECK KEYWORDS Warn
  Mesh DB "." "block"
  Include Path ""
  Results Directory ""
End

Simulation
  Max Output Level = 7
  Coordinate System = Cartesian
  Simulation Type = Transient 
  Steady State Max Iterations = 1

  Timestep Intervals = 3
  Timestep Sizes = 1.0
  Timestepping Method = implicit euler

  Output Intervals = 1

! Activate these for visualization.
! Post File = case.vtu
!  Ascii Output = True
!  vtu: save all meshes = logical true
End

Body 1
  Target Bodies(1) = 1
  Equation = 1
  Material = 1
  Body Force = 1
End

Body 2
  Equation = 2
End


Solver 1
  Equation = Linear elasticity
  Procedure = "StressSolve" "StressSolver"
  Variable = -dofs 3 Disp
  Nonlinear System Convergence Tolerance = 1.0e-5
  Nonlinear System Max Iterations = 30
  Nonlinear System Min Iterations = 2
  Nonlinear System Relaxation Factor = 1.0

  Linear System Solver = Iterative
  Linear System Iterative Method = "BiCGStabl"
  BiCgStabl Polynomial Degree = 4
  Linear System Max Iterations = 1000
  Linear System Convergence Tolerance = 1.0e-8
  Linear System Abort Not Converged = True
  Linear System Preconditioning = "none"
  Linear System Residual Output = 20
  Linear System Precondition Recompute = 1

  Save Limiter = True
  Apply Limiter = Logical True
End


Solver 2
  Equation = AllocateBC
  Procedure = "AllocateSolver" "AllocateSolver" 
  Variable = height  
End 


Solver 3
  Equation = MeshDeform
  Procedure = "RigidMeshMapper" "RigidMeshMapper"

! Do not move the default mesh but rather the bedrock mesh!
  Target Mesh Solver Index = Integer 4

! Move at the start of the timestep
  Exec Solver = Before timestep

  Whole Mesh Mode = Logical True
  Mesh Translate 1 = Variable "time"
    Real MATC "1.0*(tx-2)"
End


! Map the 2D height from slab
Solver 4
  Equation = "InterpolateSolver"

! Special mesh for the bedrock
  Mesh = "slab"

! Perform the interpolation solver before all other solvers, only once.
  Procedure = "Mesh2MeshSolver" "Mesh2MeshSolver"

! Project results at start of the timestep, after moving the mesh. 
  Exec Solver = before timestep

! We cannot use the "Coordinate 3" as the target variable since it would overwrite the z-coordinate.
! Hence we map the result to variable "height" that is only allocated on the boundary where we
! want to study the contact.
  Variable 1 = "Coordinate 3" 
  Target Variable 1 = "Height"

! The height is obtained as the z-coordinate of the mesh "slab".
  Target Mesh Solver Index = Integer 1

! We interpolate the height from the xy-plane ignoring the z-coordinate. 
! We cannot map otherwise results from the bedrock to 3D mesh. 
  Interpolation Passive Coordinate = Integer 3
End

Equation 1
  Name = "Elasticity"
  Active Solvers(1) = 1 
End

Equation 2
  Name = "Boundary"
  Active Solvers(1) = 2
End

Material 1
  Youngs modulus = 1.0e3
  Density = 1.0e-3
  Poisson ratio = 0.3
End

Boundary Condition 1
  Name = "Natural" 
  Target Boundaries(4) = 1 2 3 4
End 

Boundary Condition 2
  Name = "Contact"
  Target Boundaries(1) = 6

  Disp 3 Upper Limit = Equals "Height"
  Body Id = 2
End

Boundary Condition 3
  Name = "Bottom"
  Target Boundaries(1) = 5
  Disp 1 = Real 0.0
  Disp 2 = Real 0.0
  Disp 3 = Real 0.0
End

Solver 1 :: Reference Norm = 2.52127098E-01
Solver 2 :: Reference Norm = 8.37681668E-01
